"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable: no-console
var ora_1 = __importDefault(require("ora"));
var index_1 = require("../index");
exports.promote = {
    builder: function (yargs) {
        yargs
            .option('track', {
            alias: 't',
            demandOption: true,
            describe: "Can be 'internal', 'alpha', 'beta', 'production' or 'rollout'.",
            type: 'string'
        })
            .option('version-code', {
            alias: 'v',
            describe: 'Version code of the package to promote.',
            type: 'number'
        })
            .option('package-name', {
            alias: 'p',
            describe: 'ID of the package to promote.',
            type: 'string'
        })
            .check(function (argv) {
            if (argv.packageName && argv.versionCode) {
                return true;
            }
            else if (argv.apk) {
                return true;
            }
            else {
                throw new Error('You must specify either package-name and version-code or apk');
            }
        });
    },
    command: 'promote [options]',
    desc: 'Promote an APK',
    handler: function (argv) {
        var promoteParams = {
            track: argv.track
        };
        var editParams = {
            packageName: argv.packageName,
            versionCode: argv.versionCode
        };
        var apkup = new index_1.Apkup(argv.auth);
        var spinner = ora_1.default('Promoting APK...').start();
        apkup
            .promote(promoteParams, argv.apk, editParams)
            .then(function (resp) {
            spinner.stop();
            console.log('Promotion successful!');
        })
            .catch(function (err) {
            spinner.stop();
            console.error('ERROR:', err.message);
            process.exit(1);
        });
    }
};
